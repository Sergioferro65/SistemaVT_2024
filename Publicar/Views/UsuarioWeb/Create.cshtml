@model BugsMVC.Models.UsuarioViewModel
@using BugsMVC.Helpers

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using BugsMVC.Models
@using BugsMVC.DAL

<h3>
    Crear
    <small>Crear un usuario.</small>
</h3>

<div class="panel panel-default">
    @using (Html.BeginForm("Create", "UsuarioWeb", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="OperadorID" name="OperadorID" value="@ViewBag.OperadorID" />

        <div class="panel-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(m => Model.ApplicationUser.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => Model.ApplicationUser.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(m => Model.ApplicationUser.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => Model.ApplicationUser.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ApplicationUser.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(m => Model.ApplicationUser.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ApplicationUser.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <legend>Roles - Sistema VT <small style="font-size: 12px">Dejar en blanco si el usuario no accede al sistema VT</small></legend>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Roles del usuario</label>
                    <div class="col-md-10">
                        @using (var roleManager = new RoleManager<ApplicationRole>(new RoleStore<ApplicationRole>(BugsContext.Create())))
                        {
                            var roles = roleManager.Roles.Where(x => x.Name!="Consumidor").ToList();
                            using (var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(BugsContext.Create())))
                            {
                                if (SecurityHelper.IsInRole("SuperAdmin"))
                                {
                                    foreach (var rol in roles.OrderBy(x=>x.Weight))
                                    {
                                        <div class="checkbox c-checkbox">
                                            <label>
                                                <input type="checkbox" name="RolesSeleccionados" value="@rol.Name" id="@rol.Id"
                                                       @{if (Model != null && Model.RolesSeleccionados != null && Model.RolesSeleccionados.Contains(rol.Name)) { <text> checked='checked' </text>            } } />
                                                <span class="fa fa-check"></span>@rol.Name
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    foreach (var rol in roles.OrderBy(x=>x.Weight))
                                    {
                                        if (rol.Name == "Repositor" || rol.Name == "Consumidor" || rol.Name == "Técnico" || rol.Name == "Proveedor" || rol.Name == "Supervisor"
                                            || (rol.Name == "Administrador" && SecurityHelper.IsInRole("Operador")))
                                        {
                                            <div class="checkbox c-checkbox">
                                                <label>
                                                    <input type="checkbox" name="RolesSeleccionados" value="@rol.Name" id="@rol.Id"
                                                           @{if (Model != null && Model.RolesSeleccionados != null && Model.RolesSeleccionados.Contains(rol.Name)) { <text> checked='checked' </text>             } } />
                                                    <span class="fa fa-check"></span>@rol.Name
                                                </label>
                                            </div>
                                        }
                                    }
                                }
                            }
                        }
                    </div>
                </div>
            </fieldset>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Volver", "Index", "UsuarioWeb", null, new { @class = "btn btn-default" })
</div>

<script type="text/javascript">
    function obtenerFecha() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        return today = dd + '/' + mm + '/' + yyyy;
    }
</script>
@model BugsMVC.Models.Usuario

@{
    ViewBag.Title = "Carga Masiva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#OperadorID").change(function () {
            alert("1");
            if ($("#OperadorID").val() != "") LoadLocaciones();
            else {
                $("#LocacionID").empty();
                $("#JerarquiaID").empty();
            }
            return false;
        });

        $("#LocacionID").change(function () {
            alert("2");
            LoadJerarquias();
            return false;
        });
    });

    function LoadLocaciones() {
        alert("12");
        $("#LocacionID").empty();
        $("#LocacionID").append('<option value="">Seleccione una locación</option>');
        $("#LocacionID").attr('disabled', 'disabled');
        if ($("#OperadorID").val() != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetLocaciones", "Locacion")',
                dataType: 'json',
                data: { operadorID: $("#OperadorID").val() },
                success: function (locaciones) {
                    if (locaciones.length > 0) $("#LocacionID").removeAttr('disabled');
                    $.each(locaciones, function (i, locacion) {
                        $("#LocacionID").append('<option value="' + locacion.Value + '">' + locacion.Text + '</option>');
                    });
                    LoadJerarquias();
                },
                error: function (ex) {
                    alert('Hubo un error al obtener Locaciones.' + ex);
                }
            });
        }
    }

    function LoadJerarquias() {
        $("#JerarquiaID").empty();
        $("#JerarquiaID").append('<option value="">Seleccione una jerarquía</option>');
        $("#JerarquiaID").attr('disabled', 'disabled');
        if ($("#LocacionID").val() != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetJerarquias", "Jerarquia")',
                dataType: 'json',
                data: { locacionID: $("#LocacionID").val() },
                success: function (jerarquias) {
                    if (jerarquias.length > 0) $("#JerarquiaID").removeAttr('disabled');
                    $.each(jerarquias, function (i, jerarquia) {
                        $("#JerarquiaID").append('<option value="' + jerarquia.Value + '">' + jerarquia.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Hubo un error al obtener Jerarquias.' + ex);
                }
            });
        }
    }
</script>

<h3>
    Creación Masiva
    <small>Creación de usuarios de forma masiva.</small>
</h3>

<div class="panel panel-default">
    @using (Html.BeginForm("CargaMasiva", "Usuario", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="panel-body">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UsuarioID)
            <input type="hidden" id="OperadorID" name="OperadorID" value="@ViewBag.OperadorID" />

            <fieldset>
                <div class="form-group">
                    <label class="control-label col-md-2">Cantidad de Consumidores</label>
                    <div class="col-md-10">
                        <input id="cantidadConsumidores" name="cantidadConsumidores"
                               class="form-control text-box single-line" type="number" data-val="true"
                               data-val-number="El campo Cantidad de Consumidores debe ser un número."
                               data-val-required="El campo Cantidad de Consumidores es obligatorio." />
                        @Html.ValidationMessage("cantidadConsumidores", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.FechaVencimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group date">
                            @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.Efectivo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Efectivo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Efectivo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.LocacionID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.LocacionID, null, "Seleccionar una locación", htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownListFor(model => model.LocacionID, null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.LocacionID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.JerarquiaID, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.JerarquiaID, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.JerarquiaID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-default" />
                </div>
            </div>
        </div>
        }
    </div>

<div>
    @Html.ActionLink("Volver", "Index", "Usuario", null, new { @class = "btn btn-default" })
</div>

@*@section Styles {
    @Styles.Render("~/bundles/datetimePickerCss")
}
@section Scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/datetimePicker")
    @Scripts.Render("~/bundles/demoForms")
}*@
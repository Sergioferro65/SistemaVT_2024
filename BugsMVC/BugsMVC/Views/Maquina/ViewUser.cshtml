@model BugsMVC.Models.Maquina

<div class="panel panel-default">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <input type="hidden" id="OperadorID" name="OperadorID" value="@ViewBag.OperadorID" />
        @Html.HiddenFor(model => model.MaquinaID)
        @Html.HiddenFor(model => model.OperadorID)
        @Html.HiddenFor(model => model.FechaUltimaRecaudacion)
        @Html.HiddenFor(model => model.FechaUltimoService)
        @Html.HiddenFor(model => model.MostrarPanelDescuentos)
        @Html.HiddenFor(model => model.MostrarDatosOpcionales)
        @Html.HiddenFor(model => model.FechaUltimoOk)
        @Html.HiddenFor(model => model.FechaUltimaConexion)
        @Html.HiddenFor(model => model.FechaAviso)
        @Html.HiddenFor(model => model.FechaEstado)
        @Html.HiddenFor(model => model.TotalRecaudado)
        @Html.HiddenFor(model => model.ContadorVentasHistorico)
        @Html.HiddenFor(model => model.ContadorVentasParcial)
        @Html.HiddenFor(model => model.MontoVentasHistorico)
        @Html.HiddenFor(model => model.MontoVentasParcial)


        <div class="panel-body form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.MarcaModeloID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.MarcaModeloID, null, "Seleccionar una marca modelo", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarcaModeloID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.NumeroSerie, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.NumeroSerie, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumeroSerie, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.TipoProductoID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.TipoProductoID, null, "Seleccionar un tipo de producto", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoProductoID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @readOnly = "true" } })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.CheckAsignarMaquina, htmlAttributes: new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        <div class="checkbox c-checkbox needsclick">
                            <label class="needsclick">
                                <input id="CheckAsignarMaquina" name="CheckAsignarMaquina" type="checkbox" class="needsclick" value="true"
                                       @{if (Model != null && Model.CheckAsignarMaquina) { <text> checked='checked' </text>  } } />
                                <span class="fa fa-check"></span>
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.CheckAsignarMaquina, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <div id="Asignacion" style="display:@((Model.CheckAsignarMaquina)?"block":"none")">
                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AlarmaActiva, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            <div class="checkbox c-checkbox needsclick">
                                <label class="needsclick">
                                    <input id="AlarmaActiva" name="AlarmaActiva" type="checkbox" class="needsclick" value="true"
                                           @{if (Model != null && Model.AlarmaActiva.HasValue && Model.AlarmaActiva.Value) { <text> checked='checked' </text>  } } />
                                    <span class="fa fa-check"></span>
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.AlarmaActiva, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocacionID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.LocacionID, null, "Seleccionar una locación", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocacionID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Zona, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.Zona, null, "Seleccionar zona", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Zona, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Ubicacion, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NombreAlias, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.NombreAlias, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NombreAlias, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TerminalID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.TerminalID, null, "Ninguna", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TerminalID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <div id="MostrarEstadoConexion" style="display:@(!String.IsNullOrEmpty(Model.EstadoConexion)?"block":"none")">
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EstadoConexion, htmlAttributes: new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.EstadoConexion, new { htmlAttributes = new { @class = "form-control", @readOnly = "true" } })
                                @Html.ValidationMessageFor(model => model.EstadoConexion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2"></label>
                    <div class="col-md-10">
                        <div id="panelDatos" class="panel panel-default">
                            <div class="panel-heading panel-heading-collapsed">
                                Descuentos
                                <a href="#panelDatos" data-tool="panel-collapse" class="pull-right" id="IdPanelDescuentos">
                                    <em class="fa  @(Model.MostrarPanelDescuentos == true? "fa-minus" : "fa-plus")"></em>
                                </a>
                            </div>
                            <!-- .panel-wrapper is the element to be collapsed-->
                            <div id="panelDescuentos" class="panel-wrapper collapse @(Model.MostrarPanelDescuentos== true ? "in" : "")" aria-expanded="@(Model.MostrarPanelDescuentos == true? "true" : "false")">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPorcentual, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DescuentoPorcentual, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPorcentual, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio1, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio1, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio1, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor1, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor1, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio2, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio2, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio2, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor2, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor2, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio3, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio3, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio3, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor3, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor3, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor3, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio4, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio4, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio4, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor4, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor4, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor4, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio5, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio5, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio5, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor5, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor5, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor5, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    @*campos agregados *@
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio6, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio6, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio6, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor6, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor6, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor5, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio7, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio7, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio7, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor7, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor7, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor7, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio8, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio8, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio8, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor8, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor8, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor8, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio9, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio9, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio9, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor9, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor9, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor9, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DescuentoPrecio10, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoPrecio10, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoPrecio10, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DescuentoValor10, htmlAttributes: new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-3">
                                            @Html.EditorFor(model => model.DescuentoValor10, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                            @Html.ValidationMessageFor(model => model.DescuentoValor10, "", new { @class = "text-danger" })
                                        </div>
                                    </div>




                                </div>
                            </div>
                        </div>
                    </div>
                </div>

               @if (User.IsInRole("SuperAdmin"))
                {
                    <div class="form-group">
                        <label class="control-label col-md-2"></label>
                        <div class="col-md-10">
                            <div id="panelDatos" class="panel panel-default">
                                <div class="panel-heading panel-heading-collapsed">
                                    Datos opcionales
                                    <a href="#panelDatos" data-tool="panel-collapse" class="pull-right" id="IdPanelDatosOpcionales">
                                        <em class="fa  @(Model.MostrarDatosOpcionales == true? "fa-minus" : "fa-plus")"></em>
                                    </a>
                                </div>
                                <!-- .panel-wrapper is the element to be collapsed-->
                                <div id="panelDatosOpcionales" class="panel-wrapper collapse @(Model.MostrarDatosOpcionales == true? "in" : "")" aria-expanded="@(Model.MostrarDatosOpcionales == true? "true" : "false")">
                                    <div class="panel-body">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Mensaje, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.Mensaje, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Mensaje, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NotasService, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.NotasService, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.NotasService, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SoloVentaEfectivo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <div class="checkbox c-checkbox needsclick">
                                                    <label class="needsclick">
                                                        <input id="SoloVentaEfectivo" name="SoloVentaEfectivo" type="checkbox" class="needsclick" value="true"
                                                               @{if (Model != null && Model.SoloVentaEfectivo) { <text> checked='checked' </text>  } } />
                                                        <span class="fa fa-check"></span>
                                                    </label>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.SoloVentaEfectivo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorVenta, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorVenta, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorVenta, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TiempoSesion, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.TiempoSesion, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.TiempoSesion, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FactorEscala, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.FactorEscala, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FactorEscala, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Decimales, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.Decimales, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Decimales, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CreditoMaximoCash, htmlAttributes: new { @class = "col-sm-2 control-label p-r-5 p-l-5" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.CreditoMaximoCash, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.CreditoMaximoCash, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelA, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelA, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelA, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelB, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelB, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelB, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelC, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelC, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelC, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelD, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelD, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelD, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelE, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelE, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorChannelF, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorChannelF, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorChannelF, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete1, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete1, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete2, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete2, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete2, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete3, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete3, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete3, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete4, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete4, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete4, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete5, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete5, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete5, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ValorBillete6, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.EditorFor(model => model.ValorBillete6, new { htmlAttributes = new { @class = "form-control", @placeholder = "0,00" } })
                                                @Html.ValidationMessageFor(model => model.ValorBillete6, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
                                                                   }
</div>

<div>
    @Html.ActionLink("Volver", "Index", "Maquina", null, new { @class = "btn btn-default" })
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('body').append("<div id='myModal' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true' class='modal fade'>" +
            "<div class='modal-dialog' role='document'> " +
            "<div class='modal-content'>" +
            "<div class='modal-header'> " +
            "<button type='button' class='close' data-dismiss='modal' aria-label='Close'><span aria-hidden='true'>&times;</span></button>" +
            "<h4 class='modal-title'>Desasignar Máquina</h4>" + "</div>" +
               " <div class='modal-body'>" +
                   " <p>¿ Desea Ud. desasignar la máquina seleccionada ?</p>" +
               " </div>" +
               " <div class='modal-footer'>" +
                   " <button type='button' class='btn btn-primary' id='confirmationButton'>Confirmar</button>" +
                   " <button type='button' class='btn btn-default' data-dismiss='modal'>Volver</button>" +
                "</div>" +
            "</div>" +
            " </div>" +
            "</div>"
            );

        $('body').append("<div id='myModal2' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true' class='modal fade'>" +
                "<div class='modal-dialog' role='document'> " +
                "<div class='modal-content'>" +
                "<div class='modal-header'> " +
                "<button type='button' class='close' data-dismiss='modal' aria-label='Close'><span aria-hidden='true'>&times;</span></button>" +
                "<h4 class='modal-title'>Cambiar Locación</h4>" + "</div>" +
                   " <div class='modal-body'>" +
                       " <p>Para poder cambiar la locación, primero debe desasinar la máquina</p>" +
                   " </div>" +
                   " <div class='modal-footer'>" +
                       " <button type='button' class='btn btn-default' data-dismiss='modal'>Confirmar</button>" +
                    "</div>" +
                "</div>" +
                " </div>" +
                "</div>"
                );

        $("#IdPanelDatosOpcionales").on("click",function() {
            if ($("#MostrarDatosOpcionales").val() == "True") {
                $("#MostrarDatosOpcionales").val("False");
            }else {
                $("#MostrarDatosOpcionales").val("True");
            }
        });

        $("#IdPanelDescuentos").on("click", function () {
            if ($("#MostrarPanelDescuentos").val() == "True") {
                $("#MostrarPanelDescuentos").val("False");
            } else {
                $("#MostrarPanelDescuentos").val("True");
            }
        });

        if ($("#Zona").val() == "" && $("#LocacionID") == "") {
            $("#Zona").attr('disabled', 'disabled');
            $("#Zona").append('<option value="">Seleccionar número de zona</option>');
        }

        $("#LocacionID")
            .click(function () { prev_val = $(this).val(); })
            .change(function () {
            console.log("prev_val ", prev_val);
            if ($('#CheckAsignarMaquina').is(":checked") == true && prev_val != "") {
                $('#myModal2').modal('toggle');
                $(this).val(prev_val);
                return false;
            } else {

                $("#Zona").empty();
                $("#Zona").append('<option value="">Seleccionar zona</option>');
                $("#Zona").attr('disabled', 'disabled');
                if ($("#LocacionID").val() != "") {
                    LoadZonas();
                } else {
                    $("#Estado").val('Creada');
                }

                if ($("#LocacionID").val() != "" && $("#Zona").val() != "" && $("#TerminalID").val() != "") {
                    $("#Estado").val('Asignada');
                    $('#MostrarEstadoConexion').css('display', 'block');
                    $("#EstadoConexion").val('Sin Conexión');
                } else {
                    $("#Estado").val('Creada');
                    $('#MostrarEstadoConexion').css('display', 'none');
                    $("#EstadoConexion").val();
                }

                return false;
            }

        });

        $("#Zona").change(function () {
            if ($("#LocacionID").val() != "" && $("#Zona").val() != "" && $("#TerminalID").val() != "") {
                $("#Estado").val('Asignada');
                $('#MostrarEstadoConexion').css('display', 'block');
                $("#EstadoConexion").val('Sin Conexión');
            } else {
                $("#Estado").val('Creada');
                $('#MostrarEstadoConexion').css('display', 'none');
                $("#EstadoConexion").val();
            }
        });

        $("#TerminalID").change(function () {
            if ($("#LocacionID").val() != "" && $("#Zona").val() != "" && $("#TerminalID").val() != "") {
                $("#Estado").val('Asignada');
                $('#MostrarEstadoConexion').css('display', 'block');
                $("#EstadoConexion").val('Sin Conexión');
            } else {
                $("#Estado").val('Creada');
                $('#MostrarEstadoConexion').css('display', 'none');
                $("#EstadoConexion").val();
            }
        });

        $("#confirmationButton").click(function (e) {
            $('#Asignacion').css('display', 'none');
            $('#LocacionID').val('');
            $('#TerminalID').val('');
            $('#Zona').val(0);
            $('#Ubicacion').val('');

            $('#DescuentoPorcentual').val('');

            $('#DescuentoPrecio1').val('');
            $('#DescuentoPrecio2').val('');
            $('#DescuentoPrecio3').val('');
            $('#DescuentoPrecio4').val('');
            $('#DescuentoPrecio5').val('');


            $('#DescuentoValor1').val('');
            $('#DescuentoValor2').val('');
            $('#DescuentoValor3').val('');
            $('#DescuentoValor4').val('');
            $('#DescuentoValor5').val('');

            $('#NombreAlias').val('');
            $("#Estado").val('Creada');
            $("#Zona").attr('disabled', 'disabled');
            $("#Zona").append('<option value="">Seleccionar número de zona</option>');
            $('#AlarmaActiva').prop('checked', false);
            $('#CheckAsignarMaquina').prop('checked', false);
            $('#CheckAsignarMaquina').change();
            $('#myModal').modal('toggle');
        });

        $("#CheckAsignarMaquina").click(function (e) {
            if ($('#CheckAsignarMaquina').is(":checked") == false) {
                e.preventDefault();
                $('#myModal').modal('toggle');
            }

        });

        if ($('#CheckAsignarMaquina').is(":checked"))
        {
            $('#Asignacion').css('display', 'block');                        
        } else {
            $('#Asignacion').css('display', 'none');
        }

        $('#CheckAsignarMaquina').change(function () {
            if ($('#CheckAsignarMaquina').is(":checked")) {
                $('#Asignacion').css('display', 'block');
                //$('#AlarmaActiva').prop('checked', true);

            } else {
                $('#Asignacion').css('display', 'none');
                $('#LocacionID').val('');
                $('#TerminalID').val('');
                $('#Zona').val(0);
                $('#Ubicacion').val('');
                $('#NombreAlias').val('');
                $("#Zona").attr('disabled', 'disabled');
                $("#Zona").append('<option value="">Seleccionar número de zona</option>');
                $('#AlarmaActiva').prop('checked', false);
            }
        });


    });

    function LoadZonas() {
        $.ajax({
            type: 'Post',
            url: '@Url.Action("GetZonas", "Maquina")',
            dataType: 'json',
            data: { locacionID: $("#LocacionID").val() },
            success: function (zonas) {
                if (zonas.length > 0) $("#Zona").removeAttr('disabled');
                $.each(zonas, function (i, zona) {
                    $("#Zona").append('<option value="' + zona.Value + '">' + zona.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Hubo un error al obtener Zonas.' + ex);
            }
        });
    }
</script>
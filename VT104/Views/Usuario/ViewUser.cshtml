@model BugsMVC.Models.UsuarioViewModel

<div class="panel panel-default">
    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <input type="hidden" id="OperadorID" name="OperadorID" value="@ViewBag.OperadorID" />
    @Html.HiddenFor(model => model.MostrarDatosMonetarios)
    @Html.HiddenFor(model => model.MostrarDatosOpcionales)
    @Html.HiddenFor(model => model.MostrarCredencialesWeb)
    @Html.HiddenFor(model => model.UsuarioID)
    @Html.HiddenFor(model => model.UltimoUsoVT)
    @Html.HiddenFor(model => model.FechaCreacion)
    @Html.HiddenFor(model => model.FechaInhibido)
    @Html.HiddenFor(model => model.UltimaRecargaZona1)
    @Html.HiddenFor(model => model.UltimaRecargaZona2)
    @Html.HiddenFor(model => model.UltimaRecargaZona3)
    @Html.HiddenFor(model => model.UltimaRecargaZona4)
    @Html.HiddenFor(model => model.UltimaRecargaZona5)

    <div class="panel-body">
        @Html.ValidationSummary(true, "Debe completar todos los campos obligatorios", new { @class = "text-danger" })
        <fieldset>
            @*<legend>Datos Generales</legend>*@
            <div class="form-group">
                @Html.LabelFor(model => model.LocacionID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.LocacionID, null, "Seleccionar una locación", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LocacionID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.JerarquiaID, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.JerarquiaID, null, "Seleccionar una jerarquía", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JerarquiaID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.ClaveTerminal, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ClaveTerminal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClaveTerminal, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.FechaVencimiento, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    <div id="datetimeVencimiento" class="input-group date">
                        @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control",@autocomplete="off"} })
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                <label class="col-sm-2 control-label">Inhibido</label>
                <div class="col-sm-1">
                    <div class="checkbox c-checkbox">
                        <label>
                            <input type="checkbox" name="Inhibido" id="Inhibido"
                                   @{if (Model !=null && Model.Inhibido) { <text> checked='checked' </text>            } } />
                            <span class="fa fa-check"></span>
                        </label>
                    </div>
                </div>
                <div class="col-sm-7">
                    <label class="col-sm-4 control-label" id="lblFechaInhibido"></label>
                    <input type="hidden" id="FechaInhibido" name="FechaInhibido">
                </div>
                @Html.ValidationMessageFor(model => model.FechaInhibido, "", new { @class = "text-danger" })
            </div>
        </fieldset>
        <fieldset>
            <div id="panelDatos2" class="panel panel-default">
                <div class="panel-heading panel-heading-collapsed">
                    Datos Monetarios
                    <a href="#panelDatos2" data-tool="panel-collapse" data-toggle="tooltip" class="pull-right" id="IdPanelDatosMonetarios">
                        <em class="fa @(Model.MostrarDatosMonetarios == true? " fa-minus" : "fa-plus" )"></em>
                    </a>
                </div>
                <div id="panelDatosMonetarios" class="panel-wrapper collapse @(Model.MostrarDatosMonetarios == true? " in" : "" )" aria-expanded="@(Model.MostrarDatosMonetarios == true? " true" : "false" )">
                    <div class="panel-body">
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Efectivo, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Efectivo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Efectivo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="hidden" data-zonaid="1">
                            <div class="form-group">
                                @Html.Label("Zona 1 - ", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.CreditoZona1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditoZona1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="hidden" data-zonaid="2">
                            <div class="form-group">
                                @Html.Label("Zona 2 - ", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.CreditoZona2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditoZona2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="hidden" data-zonaid="3">
                            <div class="form-group">
                                @Html.Label("Zona 3 - ", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.CreditoZona3, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditoZona3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="hidden" data-zonaid="4">
                            <div class="form-group">
                                @Html.Label("Zona 4 - ", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.CreditoZona4, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditoZona4, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="hidden" data-zonaid="5">
                            <div class="form-group">
                                @Html.Label("Zona 5 - ", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.CreditoZona5, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditoZona5, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div id="panelDatos" class="panel panel-default">
                <div class="panel-heading panel-heading-collapsed">
                    Datos opcionales
                    <a href="#panelDatos" data-tool="panel-collapse" data-toggle="tooltip" class="pull-right" id="IdPanelDatosOpcionales">
                        <em class="fa @(Model.MostrarDatosOpcionales == true? " fa-minus" : "fa-plus" )"></em>
                    </a>
                </div>
                <!-- .panel-wrapper is the element to be collapsed-->
                <div id="panelDatosOpcionales" class="panel-wrapper collapse @(Model.MostrarDatosOpcionales == true? " in" : "" )" aria-expanded="@(Model.MostrarDatosOpcionales == true? " true" : "false" )">
                    <div class="panel-body">
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Dni, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Dni, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Dni, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Legajo, htmlAttributes: new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Legajo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Legajo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <div id="panelDatosWeb" class="panel panel-default">
                <div class="panel-heading panel-heading-collapsed">
                    Credenciales de acceso Web - Sistema VT <small style="font-size: 12px">Dejar en blanco si el consumidor no accede al sistema VT</small>
                    <a href="#panelDatos" data-tool="panel-collapse" class="pull-right" id="IdPanelDatosCredencialesWeb">
                        <em class="fa @(Model.MostrarCredencialesWeb == true? " fa-minus" : "fa-plus" )"></em>
                    </a>
                </div>
                <!-- .panel-wrapper is the element to be collapsed-->
                <div id="panelDatosAccesoWeb" class="panel-wrapper collapse @(Model.MostrarCredencialesWeb == true? " in" : "" )" aria-expanded="@(Model.MostrarCredencialesWeb == true? " true" : "false" )">
                    <div class="panel-body">
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(m => Model.ApplicationUser.Email, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => Model.ApplicationUser.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApplicationUser.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(m => Model.ApplicationUser.Password, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => Model.ApplicationUser.Password, new { @class = "form-control", @autocomplete = "new-password" })
                                    @Html.ValidationMessageFor(model => Model.ApplicationUser.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(m => Model.ApplicationUser.ConfirmPassword, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.ApplicationUser.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApplicationUser.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</div>

<div>
    @Html.ActionLink("Volver", "Index", "Usuario", null, new { @class = "btn btn-default" })
</div>

<script type="text/javascript">
    $(document).ready(function () {
        LoadDatosMonetarios();

        $("#IdPanelDatosMonetarios").on("click",function() {
            if ($("#MostrarDatosMonetarios").val() == "True") {
                    $("#MostrarDatosMonetarios").val("False");
            }else {
                    $("#MostrarDatosMonetarios").val("True");
            }
        });

        $("#IdPanelDatosOpcionales").on("click",function() {
            if ($("#MostrarDatosOpcionales").val() == "True") {
                    $("#MostrarDatosOpcionales").val("False");
            }else {
                    $("#MostrarDatosOpcionales").val("True");
            }
        });

        $("#IdPanelDatosCredencialesWeb").on("click",function() {
            if ($("#MostrarCredencialesWeb").val() == "True") {
                    $("#MostrarCredencialesWeb").val("False");
            }else {
                    $("#MostrarCredencialesWeb").val("True");
            }
        });

        if ($("#ApplicationUser_Email").val() != "") {
            $("#ApplicationUser_Password").attr('placeholder', '•••••');
            $("#ApplicationUser_ConfirmPassword").attr('placeholder', '•••••');
        }

         if ($('#Inhibido').is(":checked")) {
             $('#lblFechaInhibido').text("Fecha Inhibido: " + $('#FechaInhibido').val());
        }

    $('#Inhibido').change(function () {
        refreshInhibido();
    });

    $("#OperadorID").change(function () {
        if ($("#OperadorID").val() != "") LoadLocaciones();
        else {
            $("#LocacionID").empty();
            $("#JerarquiaID").empty();
        }
        return false;
    });

    $("#LocacionID").change(function () {
        LoadJerarquias();
        LoadDatosMonetarios();
        return false;
    });

    });

    function obtenerFecha() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        var hh = today.getHours()
        var min = today.getMinutes()

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        if (hh < 10) {
            hh = '0' + hh
        }

        if (min < 10) {
            min = '0' + min
        }

        return today = dd + '/' + mm + '/'+ yyyy + ' '+ hh +  ':' + min;
    }

    function refreshInhibido() {
        if ($('#Inhibido').is(":checked")) {
            $('#lblFechaInhibido').text("Fecha Inhibido: " + obtenerFecha());
            $('#FechaInhibido').val(obtenerFecha());
            $('#Inhibido').val(true);
        } else {
            $('#lblFechaInhibido').text('');
            $('#FechaInhibido').val('');
            $('#Inhibido').val(false);
        }
    }

    function LoadLocaciones() {
        $("#LocacionID").empty();
        $("#LocacionID").append('<option value="">Seleccione una locación</option>');
        $("#LocacionID").attr('disabled', 'disabled');
        if ($("#OperadorID").val() != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetLocaciones", "Usuario")',
                dataType: 'json',
                data: { operadorID: $("#OperadorID").val() },
                success: function (locaciones) {
                    if (locaciones.length > 0) $("#LocacionID").removeAttr('disabled');
                    $.each(locaciones, function (i, locacion) {
                        $("#LocacionID").append('<option value="' + locacion.Value + '">' + locacion.Text + '</option>');
                    });
                    LoadJerarquias();
                },
                error: function (ex) {
                    alert('Hubo un error al obtener Locaciones.' + ex);
                }
            });
        }
    }

    function LoadJerarquias() {
        $("#JerarquiaID").empty();
        $("#JerarquiaID").append('<option value="">Seleccione una jerarquía</option>');
        $("#JerarquiaID").attr('disabled', 'disabled');
        if ($("#LocacionID").val() != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetJerarquias", "Usuario")',
                dataType: 'json',
                data: { locacionID: $("#LocacionID").val() },
                success: function (jerarquias) {
                    if (jerarquias.length > 0) $("#JerarquiaID").removeAttr('disabled');
                    $.each(jerarquias, function (i, jerarquia) {
                        $("#JerarquiaID").append('<option value="' + jerarquia.Value + '">' + jerarquia.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Hubo un error al obtener Jerarquias.' + ex);
                }
            });
        }
    }

    function LoadDatosMonetarios() {
        if ($("#LocacionID").val() != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDatosMonetariosByLocacion", "Usuario")',
                dataType: 'json',
                data: { locacionID: $("#LocacionID").val() },
                success: function (nombreZonas) {
                    $.each(nombreZonas, function (i, nombreZona) {
                        if (nombreZona != null && nombreZona !='') {
                            $('fieldset[data-zonaid='+(i+1)+']').removeClass('hidden');
                            $('fieldset[data-zonaid='+(i+1)+'] label').text('');
                            $('fieldset[data-zonaid='+(i+1)+'] label').append('Zona '+ (i+1) +' - '+ nombreZona +'');
                        }else {
                            if(!$('fieldset[data-zonaid='+(i+1)+']').hasClass("hidden")){
                                $('fieldset[data-zonaid='+(i+1)+']').addClass("hidden");
                            }
                        }
                    });
                },
                error: function (ex) {
                    alert('Hubo un error al obtener los Datos monetarios.' + ex);
                }
            });
        } else {
            for (var i = 0; i < 10; i++) {
                if (!$('fieldset[data-zonaid=' + (i + 1) + ']').hasClass("hidden")) {
                    $('fieldset[data-zonaid=' + (i + 1) + ']').addClass("hidden");
                }
            }
        }
    }
</script>
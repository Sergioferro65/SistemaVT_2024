@model IEnumerable<BugsMVC.Models.Usuario>
@using BugsMVC.Helpers

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var tempData = (TempDataDictionary)TempData;
}

@section Styles {
    @Styles.Render("~/bundles/datatablesCss")
    @Styles.Render("~/bundles/jqGridCss")
}
@section Scripts {
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/jqGrid")
}



<h3>
    Consumidores
    <small>Administración de consumidores.</small>
</h3>

<div>
    @if (SecurityHelper.IsAllowed((int)Permissions.Usuario.Create))
    {
        @Html.ActionLink("Crear Nuevo", "Create", null, new { @class = "btn btn-default" })
    }

    @if (SecurityHelper.IsAllowed((int)Permissions.Usuario.CargaMasiva))
    {
        @Html.ActionLink("Creación Masiva", "CargaMasiva", null, new { @class = "btn btn-default" })
    }

    @using (Html.BeginForm("ReporteConsumidoresPDF", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data", style = "display: inline;", id = "frmPdf", @target = "_blank" }))
    {
        <input type="submit" name="ExportPdf" id="ExportPdf" value="PDF" onclick="getGridFilters();" class="btn btn-default" />
        <input type="hidden" name="jqGridPostDataPdf" id="jqGridPostDataPdf" />
    }

    @using (Html.BeginForm("ExportData", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data", style = "display: inline;", id = "frmExcel" }))
    {
        <input type="submit" name="Export" id="Export" value="Excel" onclick="getGridFilters();" class="btn btn-default" />
        <input type="hidden" name="jqGridPostDataExcel" id="jqGridPostDataExcel" />
    }

    <input hidden="hidden" type="button" name="ClearFilters" id="ClearFilters" value="Borrar Filtros" class="btn btn-default" />
</div>
<br />
<!-- JSON-->
<div class="jqgrid-responsive mb-lg">
    <table id="jqGridJSON"></table>
    <div id="jqGridJSONPager"></div>
</div>

<script>
    (function (window, document, $, undefined) {

        $(function () {
            var gridJSON = $("#jqGridJSON");

            $('#ClearFilters').on('click', function () {
                clearSearchOptions(gridJSON, '/Usuario/ClearSession');
            });

            gridJSON.jqGrid({
                url: 'Usuario/GetAllUsers',
                datatype: "json",
                colModel: [
                    {
                        label: '',
                        name: '',
                        width: 65,
                        fixed: true,
                        search: false,
                        sortable: false,
                        resize: false,
                        formatter: actionButtonsFormatter
                    },
                    { label: 'UsuarioID', name: 'UsuarioID', hidden: true },
                    { label: 'FechaCreacion', name: 'FechaCreacion', hidden: true },
                    { label: 'Operador', name: 'OperadorNombre', search: true, searchoptions: { sopt: ['cn'] } , hidden : @Json.Encode((!User.IsInRole("SuperAdmin"))) },
                    { label: 'Locación', name: 'Locacion', search: true, searchoptions: { sopt: ['cn'] } },
                    { label: 'Jerarquía', name: 'Jerarquia', search: true, searchoptions: { sopt: ['cn'] }  },
                    { label: 'Número', name: 'Numero', sorttype: 'number' },
                    { label: 'Clave Terminal', name: 'ClaveTerminal', sorttype: 'number' },
                    { label: 'Nombre', name: 'Nombre', search: true, searchoptions: { sopt: ['cn'] } },
                    { label: 'Apellido', name: 'Apellido', search: true, searchoptions: { sopt: ['cn'] } },
                    { label: 'Dni', name: 'Dni', formatter: dniColumnFormatter, sorttype: 'number' },
                    { label: 'Legajo', name: 'Legajo', search: true, searchoptions: { sopt: ['cn'] } },
                    { label: 'Efectivo', name: 'Efectivo' },
                    { label: 'Credito Zona 1', name: 'CreditoZona1'},
                    { label: 'Credito Zona 2', name: 'CreditoZona2' },
                    { label: 'Credito Zona 3', name: 'CreditoZona3' },
                    { label: 'Credito Zona 4', name: 'CreditoZona4' },
                    { label: 'Credito Zona 5', name: 'CreditoZona5' },
                    { label: 'Fecha Vencimiento', name: 'FechaVencimiento', search: true, searchOnEnter: true, sorttype: 'date', formatter: 'date', formatoptions: { "srcformat": "d/m/YYYY H:i:s", "newformat": "d/m/Y H:i:s" }, searchoptions: getDefaultSearchOptionsForDate() },
                    { label: 'Inhibido' , name: 'Inhibido', formatter: booleanFormatter, searchoptions: getDefaultSearchOptionsForBoolean() , stype: 'select' },
                    { label: 'Fecha Inhibido', name: 'FechaInhibido', search: true, searchOnEnter: true, sorttype: 'date', formatter: 'date', formatoptions: { "srcformat": "d/m/YYYY H:i:s", "newformat": "d/m/Y H:i:s" }, searchoptions: getDefaultSearchOptionsForDate() },
                    { label: 'Email', name: 'Email', search: true, searchoptions: { sopt: ['cn'] }  },
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                autowidth: true,
                shrinkToFit: false,
                height: 240,
                rowNum: 20,
                rowList: [10, 20, 30],
                loadonce: false, // this is just for the demo
                caption: "Consumidores",
                hidegrid: false,
                ignoreCase: true,
                pager: "#jqGridJSONPager",
                onPaging: function (e) {
                    gridJSON.jqGrid('setGridParam', { postData: { newPage: true } });
                },
                gridComplete: function () {
                    gridJSON.jqGrid('setGridParam', { postData: { newPage: false } });
                },
                loadComplete: function (data) {
                    if (data.filters == null) {
                        return;
                    }

                    for (var i = 0; i < data.filters.length; i++) {
                        var obj = data.filters[i];
                        if ($("#gs_" + obj.field) != null) {
                            $("#gs_" + obj.field).val(obj.data);
                        }
                    }
                }
            });

            $('.ui-jqgrid-title').after('<label class="filter-help-text"><span class="fa fa-info-circle "></span> Presione enter para aplicar filtros</label>')

            //
            // Filtering by Columns
            //
            gridJSON.jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "eq"});
        });



    })(window, document, window.jQuery);

    function actionButtonsFormatter(cellvalue, options, rowObject) {
        var linkButton = @Json.Encode(SecurityHelper.IsAllowed((int)Permissions.Usuario.Update))? '<a href="Usuario/Edit/' + rowObject.UsuarioID + '" data-toggle="tooltip" data-placement="left" data-original-title="Editar" class="fa fa-edit"> </a>' : '';
        linkButton += '<a href="Usuario/Details/' + rowObject.UsuarioID + '" data-toggle="tooltip" data-placement="left" data-original-title="Detalles" class="fa fa-eye"> </a>';
        linkButton = @Json.Encode(SecurityHelper.IsAllowed((int)Permissions.Usuario.Delete))? linkButton + '<a href="Usuario/Delete/' + rowObject.UsuarioID + '" data-toggle="tooltip" data-placement="left" data-original-title="Eliminar" class="fa fa-remove"> </a>' : linkButton;

        return linkButton;
    }

    function decimalFormatter(cellvalue, options, rowObject) {

    }

    function getGridFilters() {
        var data = $('#jqGridJSON').jqGrid('getGridParam', 'postData');
        console.log(data.filters);
        $('#jqGridPostDataExcel').val(data.filters);
        $('#jqGridPostDataPdf').val(data.filters);
    };


    function dniColumnFormatter(cellvalue, options, rowObject) {
        return rowObject.Dni == 0 ? cellvalue = '' : cellvalue;
}
</script>



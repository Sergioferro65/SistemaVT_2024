@model BugsMVC.Models.ViewModels.JerarquiaViewModel
@using BugsMVC.Helpers

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    @Styles.Render("~/bundles/datatablesCss")
    @Styles.Render("~/bundles/jqGridCss")
}

@section Scripts {
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/jqGrid")
}
 
<script>
    (function (window, document, $, undefined) {

        $(function () {

            var gridJSON = $("#jqGridJSON");

            gridJSON.jqGrid({
                url: 'Jerarquia/GetAllJerarquias',
                datatype: "json",
                colModel: [
                    {
                        label: '',
                        name: '',
                        width: 65,
                        fixed: true,
                        search: false,
                        sortable: false,
                        resize: false,
                        formatter: actionButtonsFormatter
                    },
                    { label: 'JerarquiaID', name: 'JerarquiaID', hidden: true },
                    { label: 'RecargaZona1', name: 'RecargaZona1', hidden: true },
                    { label: 'RecargaZona2', name: 'RecargaZona2', hidden: true },
                    { label: 'RecargaZona3', name: 'RecargaZona3', hidden: true },
                    { label: 'RecargaZona4', name: 'RecargaZona4', hidden: true },
                    { label: 'RecargaZona5', name: 'RecargaZona5', hidden: true },
                    { label: 'DescuentoPorcentualZona1', name: 'DescuentoPorcentualZona1', hidden: true },
                    { label: 'DescuentoPorcentualZona2', name: 'DescuentoPorcentualZona2', hidden: true },
                    { label: 'DescuentoPorcentualZona3', name: 'DescuentoPorcentualZona3', hidden: true },
                    { label: 'DescuentoPorcentualZona4', name: 'DescuentoPorcentualZona4', hidden: true },
                    { label: 'DescuentoPorcentualZona5', name: 'DescuentoPorcentualZona5', hidden: true },
                    { label: 'MontoRecorteZona1', name: 'MontoRecorteZona1', hidden: true },
                    { label: 'MontoRecorteZona2', name: 'MontoRecorteZona2', hidden: true },
                    { label: 'MontoRecorteZona3', name: 'MontoRecorteZona3', hidden: true },
                    { label: 'MontoRecorteZona4', name: 'MontoRecorteZona4', hidden: true },
                    { label: 'MontoRecorteZona5', name: 'MontoRecorteZona5', hidden: true },
                    { label: 'NombreZona1', name: 'NombreZona1', hidden: true },
                    { label: 'NombreZona2', name: 'NombreZona2', hidden: true },
                    { label: 'NombreZona3', name: 'NombreZona3', hidden: true },
                    { label: 'NombreZona4', name: 'NombreZona4', hidden: true },
                    { label: 'NombreZona5', name: 'NombreZona5', hidden: true },
                    { label: 'PeriodoRecargaZona1', name: 'PeriodoRecargaZona1', hidden: true },
                    { label: 'PeriodoRecargaZona2', name: 'PeriodoRecargaZona2', hidden: true },
                    { label: 'PeriodoRecargaZona3', name: 'PeriodoRecargaZona3', hidden: true },
                    { label: 'PeriodoRecargaZona4', name: 'PeriodoRecargaZona4', hidden: true },
                    { label: 'PeriodoRecargaZona5', name: 'PeriodoRecargaZona5', hidden: true },
                    { label: 'Operador', name: 'OperadorNombre', hidden : @Json.Encode((!User.IsInRole("SuperAdmin"))) },
                    { label: 'Nombre', name: 'Nombre' },
                    { label: 'Locación', name: 'NombreLocacion' },
                    //{ label: 'Período Recarga', name: 'PeriodoRecargaZona', formatter: periodoRecargaZonaColumnFormatter },
                    { label: 'Período Recarga', name: 'PeriodoRecargaZonaHtml', sortable: false, search: false  },
                    //{ label: 'Monto Recarga', search: false, name: 'RecargaZona', sortable: false, formatter: recargaZonaColumnFormatter },
                    { label: 'Monto Recarga', name: 'RecargaZonaHtml', sortable: false, search: false  },
                    //{ label: 'Monto Recorte', search: false, name: 'MontoRecorteZona', sortable: false, formatter: montoRecorteZonaColumnFormatter },
                    { label: 'Monto Recorte', name: 'MontoRecorteZonaHtml', sortable: false, search: false  },
                    //{ label: 'Descuento Porcentual', search: false, name: 'DescuentoPorcentualZona', sortable: false, formatter: descuentoPorcentualZonaColumnFormatter },
                    { label: 'Descuento Porcentual', name: 'DescuentoPorcentualZonaHtml', sortable: false,search:false }
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                autowidth: true,
                shrinkToFit: false,
                height: 240,
                rowNum: 20,
                rowList: [10, 20, 30],
                loadonce: true, // this is just for the demo
                caption: "Jerarquías",
                hidegrid: false,
                ignoreCase: true,
                pager: "#jqGridJSONPager"
            });

            //
            // Filtering by Columns
            //
            gridJSON.jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });

        });

    })(window, document, window.jQuery);

    function actionButtonsFormatter(cellvalue, options, rowObject) {
        var linkButton = @Json.Encode(SecurityHelper.IsAllowed((int)Permissions.Jerarquia.Update))? '<a href="Jerarquia/Edit/' + rowObject.JerarquiaID + '" data-toggle="tooltip" data-placement="left" data-original-title="Editar" class="fa fa-edit"> </a>' : '';
        linkButton += '<a href="Jerarquia/Details/' + rowObject.JerarquiaID + '" data-toggle="tooltip" data-placement="left" data-original-title="Editar" class="fa fa-eye"> </a>';
        linkButton = @Json.Encode(SecurityHelper.IsAllowed((int)Permissions.Jerarquia.Delete))? linkButton + '<a href="Jerarquia/Delete/' + rowObject.JerarquiaID + '" data-toggle="tooltip" data-placement="left" data-original-title="Editar" class="fa fa-remove"> </a>' : linkButton;

        return linkButton;
    }

    function descuentoPorcentualZonaColumnFormatter(cellvalue, options, rowObject) {
        var DescuentoPorcentualZona = '';
        if (rowObject.Zona1Activa) DescuentoPorcentualZona += '<div>Zona ' + rowObject.NombreZona1 + ' = ' + rowObject.DescuentoPorcentualZona1.toString().replace('.', ',') + '%</div>';
        if (rowObject.Zona2Activa) DescuentoPorcentualZona += '<div>Zona ' + rowObject.NombreZona2 + ' = ' + rowObject.DescuentoPorcentualZona2.toString().replace('.', ',') + '%</div>';
        if (rowObject.Zona3Activa) DescuentoPorcentualZona += '<div>Zona ' + rowObject.NombreZona3 + ' = ' + rowObject.DescuentoPorcentualZona3.toString().replace('.', ',') + '%</div>';
        if (rowObject.Zona4Activa) DescuentoPorcentualZona += '<div>Zona ' + rowObject.NombreZona4 + ' = ' + rowObject.DescuentoPorcentualZona4.toString().replace('.', ',') + '%</div>';
        if (rowObject.Zona5Activa) DescuentoPorcentualZona += '<div>Zona ' + rowObject.NombreZona5 + ' = ' + rowObject.DescuentoPorcentualZona5.toString().replace('.', ',') + '%</div>';
        return DescuentoPorcentualZona;
    }

    function montoRecorteZonaColumnFormatter(cellvalue, options, rowObject) {
        var MontoRecorteZona = '';

        if (rowObject.Zona1Activa) MontoRecorteZona += '<div>Zona ' + rowObject.NombreZona1 + ' = ' + rowObject.MontoRecorteZona1.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona2Activa) MontoRecorteZona += '<div>Zona ' + rowObject.NombreZona2 + ' = ' + rowObject.MontoRecorteZona2.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona3Activa) MontoRecorteZona += '<div>Zona ' + rowObject.NombreZona3 + ' = ' + rowObject.MontoRecorteZona3.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona4Activa) MontoRecorteZona += '<div>Zona ' + rowObject.NombreZona4 + ' = ' + rowObject.MontoRecorteZona4.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona5Activa) MontoRecorteZona += '<div>Zona ' + rowObject.NombreZona5 + ' = ' + rowObject.MontoRecorteZona5.toString().replace('.', ',') + '</div>';

        return MontoRecorteZona;
    }

    function recargableZonaColumnFormatter(cellvalue, options, rowObject) {
        var RecargableZona = '';
        if (rowObject.Zona1Activa) RecargableZona += '<div>Zona ' + rowObject.NombreZona1 + ' = ' + rowObject.RecargableZona1.toString().replace('.', ',').replace('true', 'Si').replace('false', 'No') + '</div>';
        if (rowObject.Zona2Activa) RecargableZona += '<div>Zona ' + rowObject.NombreZona2 + ' = ' + rowObject.RecargableZona2.toString().replace('.', ',').replace('true', 'Si').replace('false', 'No') + '</div>';
        if (rowObject.Zona3Activa) RecargableZona += '<div>Zona ' + rowObject.NombreZona3 + ' = ' + rowObject.RecargableZona3.toString().replace('.', ',').replace('true', 'Si').replace('false', 'No') + '</div>';
        if (rowObject.Zona4Activa) RecargableZona += '<div>Zona ' + rowObject.NombreZona4 + ' = ' + rowObject.RecargableZona4.toString().replace('.', ',').replace('true', 'Si').replace('false', 'No') + '</div>';
        if (rowObject.Zona5Activa) RecargableZona += '<div>Zona ' + rowObject.NombreZona5 + ' = ' + rowObject.RecargableZona5.toString().replace('.', ',').replace('true', 'Si').replace('false', 'No') + '</div>';

        return RecargableZona;
    }
    function recargaZonaColumnFormatter(cellvalue, options, rowObject) {
        var RecargaZona = '';
        if (rowObject.Zona1Activa) RecargaZona += '<div>Zona ' + rowObject.NombreZona1 + ' = ' + rowObject.RecargaZona1.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona2Activa) RecargaZona += '<div>Zona ' + rowObject.NombreZona2 + ' = ' + rowObject.RecargaZona2.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona3Activa) RecargaZona += '<div>Zona ' + rowObject.NombreZona3 + ' = ' + rowObject.RecargaZona3.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona4Activa) RecargaZona += '<div>Zona ' + rowObject.NombreZona4 + ' = ' + rowObject.RecargaZona4.toString().replace('.', ',') + '</div>';
        if (rowObject.Zona5Activa) RecargaZona += '<div>Zona ' + rowObject.NombreZona5 + ' = ' + rowObject.RecargaZona5.toString().replace('.', ',') + '</div>';

        return RecargaZona;
    }

    function periodoRecargaZonaColumnFormatter(cellvalue, options, rowObject) {
        var PeriodoRecargaZona = '';
        if (rowObject.Zona1Activa) PeriodoRecargaZona += '<div>Zona ' + rowObject.NombreZona1 + ' = ' + periodoRecargaToText(rowObject.PeriodoRecargaZona1) + '</div>';
        if (rowObject.Zona2Activa) PeriodoRecargaZona += '<div>Zona ' + rowObject.NombreZona2 + ' = ' + periodoRecargaToText(rowObject.PeriodoRecargaZona2) + '</div>';
        if (rowObject.Zona3Activa) PeriodoRecargaZona += '<div>Zona ' + rowObject.NombreZona3 + ' = ' + periodoRecargaToText(rowObject.PeriodoRecargaZona3) + '</div>';
        if (rowObject.Zona4Activa) PeriodoRecargaZona += '<div>Zona ' + rowObject.NombreZona4 + ' = ' + periodoRecargaToText(rowObject.PeriodoRecargaZona4) + '</div>';
        if (rowObject.Zona5Activa) PeriodoRecargaZona += '<div>Zona ' + rowObject.NombreZona5 + ' = ' + periodoRecargaToText(rowObject.PeriodoRecargaZona5) + '</div>';
        return PeriodoRecargaZona;
    }

    function periodoRecargaToText(periodoRecarga)
    {
        var periodoRecargaTexto = '';

        switch (periodoRecarga){
            case 0:
                periodoRecargaTexto = 'Ninguno';
                break;
            case 1:
                periodoRecargaTexto = 'Diario';
                break;
            case 2:
                periodoRecargaTexto = 'Semanal';
                break;
            case 3:
                periodoRecargaTexto = 'Mensual';
                break;
        }

        return periodoRecargaTexto;
    }

    function exportToExcel() {
        var data = JSON.stringify($('#jqGridJSON').jqGrid('getGridParam', 'postData'));
        $('#jqGridPostData').val(data);
    }

</script>

<h3>
    Jerarquías
    <small>Administración de jerarquías.</small>
</h3>

<div>
@if (SecurityHelper.IsAllowed((int)Permissions.Jerarquia.Create))
{
    @Html.ActionLink("Crear Nueva", "Create", null, new { @class = "btn btn-default" })
}
    @using (Html.BeginForm("ExportData", "Jerarquia", FormMethod.Post, new { enctype = "multipart/form-data", style = "display: inline;" }))
    {
        <input type="submit" name="Export" id="Export" value="Excel" onclick="exportToExcel();" class="btn btn-default" />
        <input type="hidden" name="jqGridPostData" id="jqGridPostData" />
    }
</div>
<br />
<div class="jqgrid-responsive mb-lg">
    <table id="jqGridJSON"></table>
    <div id="jqGridJSONPager"></div>
</div>
